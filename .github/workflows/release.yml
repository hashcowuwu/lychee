# 工作流名稱
name: Go Semantic Release (JS Version)

# 觸發工作流的事件
on:
  push:
    branches:
      - main # 或者 'master'，取決於你的主分支名稱

# 定義工作流中的任務
jobs:
  release:
    # 任務名稱
    name: Semantic Release
    # 運行此任務的虛擬機環境
    runs-on: ubuntu-latest
    
    # *** 這裡新增 permissions 配置 ***
    permissions:
      contents: write # 允許寫入倉庫，用於推送 Tag、更新 CHANGELOG.md
      issues: write   # 允許創建 Issue，如果 Semantic Release 失敗會創建 Issue 通知
      pull-requests: write # 允許創建 Pull Request，雖然 Semantic Release 不會直接創建 PR，但這是慣例，或對某些插件有用
      id-token: write # 如果你使用 OIDC，需要這個

    # 任務中的步驟
    steps:
      # 第一步：檢出程式碼
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 第二步：設定 Go 環境
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.5'

      # 新增步驟：安裝 systemd 開發庫
      - name: Install systemd dependencies
        run: sudo apt-get update && sudo apt-get install -y libsystemd-dev

      # 第三步：構建 Go 應用
      - name: Build Go Application
        run: |
          echo "Building for Linux..."
          go build -o lychee ./cmd/app/main.go

      # 第四步：安裝 Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 第五步：安裝 Semantic Release 及相關插件
      - name: Install Semantic Release and Plugins
        run: npm install semantic-release @semantic-release/git @semantic-release/changelog @semantic-release/github @semantic-release/exec

      # 第六步：運行 Semantic Release
      - name: Run Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release